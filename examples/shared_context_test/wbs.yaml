name: "Shared Context Test"
description: "Demonstrates shared context feature with import dependencies"
execution:
  shared_context: true
phases:
  - id: "implementation"
    name: "Implementation Phase"
    tasks:
      - id: "create-models"
        name: "Create models.py with User class"
        prompt: |
          Create a models.py file with a simple User class that has:
          - id (int)
          - name (str) 
          - email (str)
          - __init__ method
          - __repr__ method
        dependencies: []
      - id: "create-database"
        name: "Create database.py that imports and uses User model"
        prompt: |
          Create a database.py file that:
          - Imports User from models
          - Has a simple in-memory database (list)
          - Has functions: add_user(user), get_user(id), get_all_users()
          - The functions should work with the User model from models.py
        dependencies: ["create-models"]
      - id: "create-main"
        name: "Create main.py that uses both modules"
        prompt: |
          Create a main.py file that:
          - Imports User from models
          - Imports database functions from database
          - Creates a few User instances
          - Adds them to the database
          - Retrieves and prints all users
          - Include if __name__ == "__main__": block
        dependencies: ["create-models", "create-database"]